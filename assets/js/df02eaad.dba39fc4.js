"use strict";(self.webpackChunkcontrol_wrapper_docs=self.webpackChunkcontrol_wrapper_docs||[]).push([[576],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),c=p(r),m=o,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=c;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},4089:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:1},s="Users",a={unversionedId:"development/users",id:"development/users",title:"Users",description:"Listed below are all the user methods, along with their parameters, filters, and includes.",source:"@site/docs/development/users.md",sourceDirName:"development",slug:"/development/users",permalink:"/docs/development/users",draft:!1,editUrl:"https://github.com/Control-Wrapper/Control-Wrapper/docs/development/users.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Methods",permalink:"/docs/category/methods"},next:{title:"test",permalink:"/docs/test"}},l={},p=[{value:"Create User",id:"create-user",level:2},{value:"List Users",id:"list-users",level:2},{value:"User Details",id:"user-details",level:2}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"users"},"Users"),(0,o.kt)("p",null,"Listed below are all the user methods, along with their parameters, filters, and includes.",(0,o.kt)("br",null),"\nAll parameters that contain (",(0,o.kt)("inlineCode",{parentName:"p"},"*"),") are required."),(0,o.kt)("h2",{id:"create-user"},"Create User"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Returns a dict of the new registered user.")),(0,o.kt)("admonition",{title:"Parameters",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"name: ",(0,o.kt)("inlineCode",{parentName:"p"},"str")," -> The user name. ",(0,o.kt)("inlineCode",{parentName:"p"},"*"),(0,o.kt)("br",null),"\nemail: ",(0,o.kt)("inlineCode",{parentName:"p"},"str")," -> The user email. ",(0,o.kt)("inlineCode",{parentName:"p"},"*"),(0,o.kt)("br",null),"\npassword: Optional","[",(0,o.kt)("inlineCode",{parentName:"p"},"str"),"]"," -> The user password. If a password is not supplied, a random one will be generated.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If a random password is generated, this method or the API will NOT return the password.\nIn this case, the user will need to reset their password on the website.")),(0,o.kt)("h2",{id:"list-users"},"List Users"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Returns all users registered in the system, or ",(0,o.kt)("inlineCode",{parentName:"p"},"None")," if a specific user is not found.",(0,o.kt)("br",null),"\nOptionally you can provide Filters and Includes for user query.")),(0,o.kt)("admonition",{title:"Filters & Includes",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"name: ",(0,o.kt)("inlineCode",{parentName:"p"},"str")," -> The user name.",(0,o.kt)("br",null),"\nemail: ",(0,o.kt)("inlineCode",{parentName:"p"},"str")," -> The user email.",(0,o.kt)("br",null),"\nserver_limit: ",(0,o.kt)("inlineCode",{parentName:"p"},"int")," -> Limit of user servers.",(0,o.kt)("br",null),"\npterodactyl_id: ",(0,o.kt)("inlineCode",{parentName:"p"},"int")," -> The Pterodactyl ID of the user.",(0,o.kt)("br",null),"\nrole: ",(0,o.kt)("inlineCode",{parentName:"p"},"str")," -> The user role. Available Roles: ",(0,o.kt)("inlineCode",{parentName:"p"},"['admin', 'mod', 'client', 'member']"),".",(0,o.kt)("br",null),"\nsuspended: ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")," -> Whether the user is suspended or not.",(0,o.kt)("br",null),"\nincludes: ",(0,o.kt)("inlineCode",{parentName:"p"},"list")," -> List of includes. Available Includes: ",(0,o.kt)("inlineCode",{parentName:"p"},"['servers', 'serversCount', 'notifications', 'notificationsCount', 'payments', 'paymentsCount', 'vouchers', 'vouchersCount', 'discordUser', 'discordUserCount']"),".")),(0,o.kt)("h2",{id:"user-details"},"User Details"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Returns data for a specific user, or ",(0,o.kt)("inlineCode",{parentName:"p"},"None")," if the user is not found.",(0,o.kt)("br",null),"\nThis is useful for checking whether a user has verified his discord account.")),(0,o.kt)("admonition",{title:"Parameters & Includes",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"id: ",(0,o.kt)("inlineCode",{parentName:"p"},"int")," -> The user ID. ",(0,o.kt)("inlineCode",{parentName:"p"},"*"),(0,o.kt)("br",null),"\nincludes: ",(0,o.kt)("inlineCode",{parentName:"p"},"list")," -> List of includes. Available Includes: ",(0,o.kt)("inlineCode",{parentName:"p"},"['servers', 'serversCount', 'notifications', 'notificationsCount', 'payments', 'paymentsCount', 'vouchers', 'vouchersCount', 'discordUser', 'discordUserCount']"),".")))}d.isMDXComponent=!0}}]);